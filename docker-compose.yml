version: '3'

services:
  broker-service:
    build: 
      context: ./broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports:
      - "8000:80"
    deploy:
      mode: replicated
      replicas: 1
  
  auth-service:
    build:
      context: ./auth-service
      dockerfile: ./auth-service.dockerfile
    restart: always
    ports:
      - "8001:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=root password=root dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    build:
      context: ./logger-service
      dockerfile: ./logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    build:
      context: ./mailer-service
      dockerfile: ./mailer-service.dockerfile
    restart: always
    ports:
      - "8002:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: "mailhog/mailhog"
    ports:
      - "1025:1025"
      - "8025:8025"